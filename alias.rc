alias ..='cd ../..'
alias ...='cd ../../..'
alias ....='cd ../../../..'
alias ages='make -C ~/src/install ages'
alias cdreal='cd $(readlink -e `pwd`)'
alias co='git number checkout'
alias add2git='add2git --via cpanm'
alias cp='cp -i'
alias currwin="xprop -root _NET_ACTIVE_WINDOW|awk '{print \$5}'"
alias d='dict'
alias deb='sudo apt-get'
alias ds='du -sh * | sort -h'
alias ga='git number add'
alias gap='git number add -p'
alias gca='git commit --amend'
alias grc='git rebase --continue'
alias gcv="GIT_EDITOR=\"vim -c 'normal gg/^diffdGgg:bot newP:set ft=diff buftype=nofile nospell:nohlsearch:wincmd k'\" git commit -v"
alias gd='git number diff'
alias gdh='git diff HEAD^ HEAD'
alias gdw='git number diff --color-words="[A-Za-z0-9]"'
alias gdb='gdb -q'
alias gdc='git number diff --cached'
alias gdcw='git number diff --cached --color-words="[A-Za-z0-9]"'
alias ge='git number -c'
alias gl='git number log'
alias g='git number --column'
alias gdiff='git diff --no-index'
alias gn='git number'
alias gnl='git number --color=always|less'
alias gns='git number --column -- --ignore-submodules'
alias grep='grep --color=auto'
alias ggrep='git grep --no-index'
alias gu='git number --column -uno'
alias help='run-help'
alias ignore='git number -c ignore'
alias irssi='TERM=screen-256color irssi'
alias lr='ls -rt'
alias lrt='ls -lrt'
alias lrtn='(printf "PERM LINKS OWNER GROUP SIZE MONTH DAY " ; printf "HH:MM/YEAR NAME SYMLINK\n" ; ls -lrt | sed 1d) | column -t'
alias ls='ls --color=auto'
#alias mgrep='mgit -cp grep'
# When network is down use this:
#alias ls='ls -F'
alias mutt='TERM=screen-256color mutt'
alias muttman='col -b </usr/local/share/doc/mutt/manual.txt|view -'
alias mv='mv -i'
alias rm='rm -i'
alias s='ls'
alias simplePS='precmd(){};chpwd(){};RPROMPT= PS1="\$ "'
alias ttk='tentakel'
alias vgrep='git grep -Ovi'
alias v='git number -c vim'
alias vd='git number difftool'
alias vi='vim'
alias vq='vimquit'
alias vsv='ge vi --servername vsv'
alias wl='vi -o ~/work.{todo,doing,done}'
alias pl='vi -o ~/mine.{todo,doing,done}'
alias zen="zstyle ':vcs_info:*' enable"

alias -g CD='colordiff|less'
alias -g TSTAMP='while read line; do echo "[$EPOCHREALTIME] $line";done'
alias -g ENV="|tr '\000' '\n'"
alias -g IP="|grep --color=auto -E '^|([0-9]+\.[0-9]+\.[0-9]+\.[0-9]+)+'"
alias -g NO='--name-only'
alias -g P='`p`'
alias -g 'P.'='`p -.`'
alias -g V='`vs`'

for cmd in \
        search \
	find \
        dpkg \
        vif \
        sql \
        youtube-dl
do
	alias $cmd="noglob $cmd"
done

which _vim >/dev/null && compdef vi=vim
compdef vih=vimhelp
compdef gn=git
compdef ttk=tentakel
# compdef _git co=git-checkout

function chromepdf() {
  url=${1?need url}
  out=${2?need output.pdf}
  chrome --headless --disable-gpu --print-to-pdf="$out" "$url"
}

function get_cds_candidates() {
  # cat /dev/shm/*.cwd|grep -v "^$HOME$"|sed -e "s:$HOME/::"|sort -u|grep ${1:-.}
  pgrep zsh|
  while read pid; do
    readlink /proc/$pid/cwd
  done|
  grep -v "^$HOME$"|
  sed -e "s:$HOME/::"|
  sort -u|
  grep ${1:-.}
}

# cdf: do a cd to dirname of $1
function cdf() {
  test -z "$1" && return

  if [ -f "$1" ];
  then
    wanted_path=$1
  else
    files=( `mgit -p ls-files -- "*/$1*"` )
    if [ $#files -eq 1 ]; then
      wanted_path=${files[1]}
    elif [ $#files -gt 1 ]; then
      c=1
      echo "Choose path to cd into: "
      for p in $files; do
        echo "  $c. $p"
        c=$((c + 1))
      done
      echo -n "Choose: "
      read answer therest
      if [ $answer -gt 0 -a $answer -le $#files ]; then
        wanted_path=${files[$answer]}
      fi
    else
      echo "cdf: $files: Not a file"
      return
    fi
  fi
  cd `dirname $wanted_path`
}

function cdl() {
  # cd to last saved directory for current session
  ld=~/.lastdir.$TERM_NAME
  if [ -f $ld ]; then
    cd $(cat $ld)
  fi
}

function cds() {
  new_dir=`get_cds_candidates $*|head -${2:-1}|tail -1`
  case $new_dir in
    /*) cd "$new_dir";;
    *) cd "$HOME/$new_dir";;
  esac
}

function cn() {
  test -z "$1" && return
  file=`git list $1`
  test -d $file && cd $file && return
  test -f $file && cd $(dirname $file)
}

# cd to a process' PWD
function cdp() {
	local pid=$1
	test -z "$pid" && return
	pwd=`cat /proc/$pid/environ|tr '\000' '\n'|grep '^PWD='|sed -e 's/PWD=//'`
	cd $pwd
}

function u() {
	nup=${1:-1}
	t=''
	for i in {1..$nup}; do
		t="$t../"
	done
	cd $t
}

#function go() {
#	if [ "$1" = "cd" ]; then
#		shift
#		cd $(command go list -f '{{.Dir}}' $@ || echo .)
#	elif [ "$1" = "doc" ]; then
#		shift
#		command godoc $@|less
#	else
#		command go $@
#	fi
#}

# my godoc is broken :(
#   $ ~/go/bin/godoc os.exec
#   2013/11/15 09:27:37 readTemplate: open /home/nazri/go/lib/godoc/codewalk.html: no such file or directory
function godoc() {
	command godoc $@|command less
}

function pickcolor() {
	for theme in `highlight -w|grep -E '^[a-z]+$'`; do
		clear
		godoc -src fmt doPrint|
		highlight -O xterm256 --syntax go --style $theme
		echo $theme
		read ans
	done
}
function gosrc() {
	style=moria
	style=zenburn
	style=anotherdark
	godoc -src $@|
	highlight -O xterm256 --syntax go --style $style
}
function goserve() {
	echo "http://localhost:6060/"
	godoc -http=:6060 -index -notes="BUG|TODO|FIXME"
}

function cdn() {
  if [ -z "$1" ]; then
    echo >&2 cdn: need arg
    return 1
  fi
  cd `git list $1`
}

function gocd() {
  if [ -z "$1" ]; then
    cd "$1"
  else
    cd $(go list -f {{.Dir}} "$1")
  fi
}

function show() {
  apt-cache show $*|
    GREP_COLORS="mt=32" grep --color=always \
      -E '^|^Version: .*|^Homepage: .*|^Description.*|^ .*'|
    less -R
}

function setup_go() {
    #PATH=$GOROOT/bin:$PATH
    export GOROOT=${1?need GOROOT arg}
    function godoc() {
      $GOROOT/bin/godoc "$@"|command less
    }
    function go() {
      $GOROOT/bin/go "$@"
    }
    function gofmt() {
      $GOROOT/bin/gofmt "$@"
    }
}

function go1.4() {
    setup_go $HOME/go1.4.3
    #export GOROOT=$HOME/go1.4
    #PATH=$GOROOT/bin:$PATH
}

function go1.5() {
    setup_go $HOME/go1.5
    #export GOROOT=$HOME/go1.5
    #PATH=$GOROOT/bin:$PATH
}

function go1.6() {
    setup_go $HOME/go1.6.2
}

function go1.7() {
    setup_go $HOME/go1.7
}
